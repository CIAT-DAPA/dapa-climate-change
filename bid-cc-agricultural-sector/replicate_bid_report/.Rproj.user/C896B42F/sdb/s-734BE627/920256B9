{
    "collab_server" : "",
    "contents" : "# Across-crop comparison with error bars\ng <- gc(); rm(list = ls())\n\n# R options\noptions(warn = -1); options(scipen = 999); OSys <- Sys.info(); OSys <- OSys[names(OSys)==\"sysname\"]\n\nif(OSys == \"Windows\"){\n  setwd(\"//dapadfs/workspace_cluster_3/bid-cc-agricultural-sector/22-Redo-BID-report\")\n} else {\n  if(OSys == \"Linux\"){\n    setwd(\"/mnt/workspace_cluster_3/bid-cc-agricultural-sector/22-Redo-BID-report\")\n  }\n}\n\n# Load libraries\nsuppressMessages(library(gplots))\n\n# static data\ncrops <- c('Maize', 'Rice', 'Soybean', 'Bean', 'Wheat')\ncultivos = c('maiz','arroz','trigo','soya','frijol')\ncultivos.en = c('maize','rice','wheat','soybean','dry bean')\n\n# Load input data\nfor(i in 1:length(crops)){\n  eval(parse(text = paste(\"load('./summaries/\", crops[i], \".ch.r.Rdat')\", sep = \"\")))\n  eval(parse(text = paste(\"load('./summaries/\", crops[i], \".ch.s.Rdat')\", sep = \"\")))\n  eval(parse(text = paste(\"load('./summaries/\", crops[i], \".cv.r.Rdat')\", sep = \"\")))\n  eval(parse(text = paste(\"load('./summaries/\", crops[i], \".cv.s.Rdat')\", sep = \"\")))\n  eval(parse(text = paste(\"load('./summaries/\", crops[i], \".fail.r.Rdat')\", sep = \"\")))\n  eval(parse(text = paste(\"load('./summaries/\", crops[i], \".fail.s.Rdat')\", sep = \"\")))\n}\nregions = dimnames(Rice.ch.r)[[2]]\n\n# Merge data frames by region & make plots\n# Plot mean\npar(ask = F)\nfor(r in 1:5){\n  \n  crop.all = data.frame(arroz.r = Rice.ch.r[,r], arroz.s = Rice.ch.s[,r], frijol.r = Bean.ch.r[,r], frijol.s = Bean.ch.s[,r], trigo.r = Wheat.ch.r[,r], trigo.s = Wheat.ch.s[,r], maiz.r = Maize.ch.r[,r], maiz.s = Maize.ch.s[,r], soya.r = Soybean.ch.r[,r], soya.s = Soybean.ch.s[,r])\n  crop.all = as.matrix(crop.all)\n  \n  # Create barplot with errorbars\n  barplot2(crop.all[3,], plot.ci = T, ci.l = crop.all[6,], ci.u = crop.all[7,])\n  title(paste('Area-weighted yield changes for ', regions[r], sep = ''))\n}\n\n# CV plots\nfor(r in 1:5){\n  \n  crop.cv = data.frame(arroz.r = Rice.cv.r[,r], arroz.s = Rice.cv.s[,r], frijol.r = Bean.cv.r[,r], frijol.s = Bean.cv.s[,r], trigo.r = Wheat.cv.r[,r], trigo.s = Wheat.cv.s[,r], maiz.r = Maize.cv.r[,r], maiz.s = Maize.cv.s[,r], soya.r = Soybean.cv.r[,r], soya.s = Soybean.cv.s[,r])\n  crop.cv = as.matrix(crop.cv)\n  \n  # Create barplot with errorbars\n  barplot2(crop.cv[1:2,], beside = T, plot.ci = T, ci.l = rbind(NA, crop.cv[5,]), ci.u = rbind(NA, crop.cv[6,]))\n  title(paste('Inter-annual CV changes for ', regions[r], sep = ''))\n  \n}\n\n# Now merge data frames by crop system & make plots\n# Plot mean\npar(ask = F)\nfor(i in 1:5){\n  \n  eval(parse(text = paste(\"crop.ch.c = rbind(\", crops[i], \".ch.r[c(3, 6:8),],\", crops[i], \".ch.s[c(3,6:8),])\", sep = \"\")))\n  rownames(crop.ch.c)[c(1, 5)] = c('Riego', 'Secano')\n  ind.low.r = which(crop.ch.c[4,] < 5000)\n  ind.low.s = which(crop.ch.c[8,] < 5000)\n  if(length(ind.low.r) > 0){crop.ch.c[1:3, ind.low.r] = NA}\n  if(length(ind.low.s) > 0){crop.ch.c[5:7, ind.low.s] = NA}\n  \n  # Create barplot with errorbars\n  barplot2(crop.ch.c[c(1,5),], beside = T, ylim = c(-30, 30), plot.ci = T, ci.l = crop.ch.c[c(2, 6),], ci.u = crop.ch.c[c(3, 7),], col = c('blue', 'green'), ylab = '% yield change')\n  abline(h = 0)\n  title(paste(crops[i], sep = ''))\n  if(i == 5){legend('topright', c('Irrigated', 'Rainfed'), fill = c('blue', 'green'))}\n  \n}\n\n# CV plots\npar(ask = F)\nfor(i in 1:5){\n  \n  eval(parse(text = paste(\"crop.cv.c = rbind(\", crops[i], \".cv.r[c(1:2, 5:6),],\", crops[i],\".cv.s[c(1:2, 5:6),])\", sep = \"\")))\n  eval(parse(text = paste(\"crop.ch.c = rbind(\", crops[i], \".ch.r[c(3, 6:8),],\", crops[i], \".ch.s[c(3, 6:8),])\", sep = \"\")))\n  ind.low.r = which(crop.ch.c[4,] < 5000)\n  ind.low.s = which(crop.ch.c[8,] < 5000)\n  if(length(ind.low.r) > 0){crop.cv.c[1:4, ind.low.r] = NA}\n  if(length(ind.low.s) > 0){crop.cv.c[5:8, ind.low.s] = NA}\n  \n  # Create barplot with errorbars\n  barplot2(crop.cv.c[c(1:2, 5:6),], beside = T, ylim = c(0, 45), plot.ci = T, ci.l = rbind(NA, crop.cv.c[3,], NA, crop.cv.c[7,]), ci.u = rbind(NA, crop.cv.c[4,], NA, crop.cv.c[8,]), col = c('blue','blue','green','green'), density = c(-1, 30, -1, 30), ylab = 'Interannual CV (%)')\n  title(paste(crops[i], sep = ''))\n  \n  legend('top', c('Irrigated - Baseline', 'Irrigated - Multi-model mean', 'Rainfed - Baseline', 'Rainfed - Multi-model mean'), fill = c('blue', 'blue', 'green', 'green'), density = c(-1, 50, -1,50))\n  \n}\n\n# Crop failures plots\nfor(i in 1:5){\n  \n  eval(parse(text = paste(\"crop.fail.c = rbind(\", crops[i], \".fail.r[c(1:2, 5:6),],\", crops[i], \".fail.s[c(1:2, 5:6),])\", sep = \"\")))\n  eval(parse(text = paste(\"crop.ch.c = rbind(\", crops[i], \".ch.r[c(3, 6:8),],\", crops[i], \".ch.s[c(3, 6:8),])\", sep = \"\")))\n  ind.low.r = which(crop.ch.c[4,] < 5000)\n  ind.low.s = which(crop.ch.c[8,] < 5000)\n  if(length(ind.low.r) > 0){crop.cv.c[1:4, ind.low.r] = NA}\n  if(length(ind.low.s) > 0){crop.cv.c[5:8, ind.low.s] = NA}\n  \n  # Create barplot with errorbars\n  barplot2(crop.fail.c[c(1:2, 5:6),], beside = T, ylim = c(0, 20), plot.ci = T, ci.l = rbind(NA, crop.fail.c[3,], NA, crop.fail.c[7,]), ci.u = rbind(NA, crop.fail.c[4,], NA, crop.fail.c[8,]), col = c('blue', 'blue', 'green', 'green'), density = c(-1, 30, -1, 30), ylab = 'Crop failures (% area)')\n  title(paste(crops[i], sep = ''))\n  if(i == 5){\n    legend('topright', c('Irrigated - Baseline', 'Irrigated - Multi-model mean', 'Rainfed - Baseline', 'Rainfed - Multi-model mean'), fill = c('blue', 'blue', 'green', 'green'), density = c(-1, 50, -1, 50))\n  }\n  \n}\n\n# Create plot comparing crops across Latin America\ncrop.all.r = data.frame(maiz.r = Maize.ch.r[,6], arroz.r = Rice.ch.r[,6], trigo.r = Wheat.ch.r[,6], frijol.r = Bean.ch.r[,6], soya.r = Soybean.ch.r[,6])\ncrop.all.s = data.frame(maiz.s = Maize.ch.s[,6], arroz.s = Rice.ch.s[,6], trigo.s = Wheat.ch.s[,6], frijol.s = Bean.ch.s[,6], soya.s = Soybean.ch.s[,6])\ncrop.all = rbind(as.matrix(crop.all.r), as.matrix(crop.all.s))\ncolnames(crop.all) = c('Maize', 'Rice', 'Wheat', 'Dry Bean', 'Soybean')\nbarplot2(crop.all[c(3, 11),], beside = T, plot.ci = T, ci.l = crop.all[c(6, 14),], ci.u = crop.all[c(7, 15),], col = c('blue', 'green'), ylab = '% yield change')\ntitle('Area-weighted yield changes for Latin America')\nlegend('topleft', c('Irrigated', 'Rainfed'), fill = c('blue', 'green'))\n\n# Generate results for table\nround(Maize.cv.r, 2)\nMaize.cv.r[2, 6] - Maize.cv.r[1, 6] # MMM - WFD\n#c(maiz.cv.r[3,6] - maiz.cv.r[1,6],maiz.cv.r[4,6] - maiz.cv.r[1,6])  #range of models relative to WFD\nc(Maize.cv.r[5, 6] - Maize.cv.r[1, 6], Maize.cv.r[6, 6] - Maize.cv.r[1, 6])  #bootstrapped changes\n\nround(Maize.cv.s,2)\nMaize.cv.s[2,6] - Maize.cv.s[1,6]\n#c(maiz.cv.s[3,6] - maiz.cv.s[1,6],maiz.cv.s[4,6] - maiz.cv.s[1,6])  #range\nc(Maize.cv.s[5,6] - Maize.cv.s[1,6], Maize.cv.s[6,6] - Maize.cv.s[1,6])  #intervalos de confianza\n\n# Check to see if mean change > CV & significant\nabs(Maize.ch.r[3,]) > Maize.cv.r[1,] & Maize.ch.r[8,] > 5000 & (sign(Maize.ch.r[6,]) == sign(Maize.ch.r[7,]))\nabs(Rice.ch.r[3,]) > Rice.cv.r[1,] & Rice.ch.r[8,] > 5000 & (sign(Rice.ch.r[6,]) == sign(Rice.ch.r[7,]))\nabs(Soybean.ch.r[3,]) > Soybean.cv.r[1,] & Soybean.ch.r[8,] > 5000 & (sign(Soybean.ch.r[6,]) == sign(Soybean.ch.r[7,]))\n\nabs(Maize.ch.s[3,]) > Maize.cv.s[1,] & Maize.ch.s[8,] > 5000 & (sign(Maize.ch.s[6,]) == sign(Maize.ch.s[7,]))\nabs(Rice.ch.s[3,]) > Rice.cv.s[1,] & Rice.ch.s[8,] > 5000 & (sign(Rice.ch.s[6,]) == sign(Rice.ch.s[7,]))\nabs(Soybean.ch.s[3,]) > Soybean.cv.s[1,] & Soybean.ch.s[8,] > 5000 & (sign(Soybean.ch.s[6,]) == sign(Soybean.ch.s[7,]))\n\n# look for sig changes in CV\n((Maize.cv.r[2,] - Maize.cv.r[1,]) > 5 & Maize.cv.r[5,] > Maize.cv.r[1,] & Maize.ch.r[8,] > 5000) \n((Rice.cv.r[2,] - Rice.cv.r[1,]) > 5 & Rice.cv.r[5,] > Rice.cv.r[1,] & Rice.ch.r[8,] > 5000)\n((Soybean.cv.r[2,] - Soybean.cv.r[1,]) > 5 & Soybean.cv.r[5,] > Soybean.cv.r[1,] & Soybean.ch.r[8,] > 5000)\n\n((Maize.cv.s[2,] - Maize.cv.s[1,]) > 5 & Maize.cv.s[5,] > Maize.cv.s[1,] & Maize.ch.s[8,] > 5000)\n((Rice.cv.s[2,] - Rice.cv.s[1,]) > 5 & Rice.cv.s[5,] > Rice.cv.s[1,] & Rice.ch.s[8,] > 5000)\n((Soybean.cv.s[2,] - Soybean.cv.s[1,]) > 5 & Soybean.cv.s[5,] > Soybean.cv.s[1,] & Soybean.ch.s[8,] > 5000)\n",
    "created" : 1498849036509.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "565296683",
    "id" : "920256B9",
    "lastKnownWriteTime" : 1499701287,
    "last_content_update" : 1499701287448,
    "path" : "D:/ToBackup/climate_and_crop_modelling/bid-cc-agricultural-sector/replicate_bid_report/Barplots_summary_crops.R",
    "project_path" : "Barplots_summary_crops.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}