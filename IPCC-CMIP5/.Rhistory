# Define start and end year
staYear <- as.integer(period)
endYear <- as.integer(period) + 29
cat("\nAverage over: ", rcp, " ", gcm, " ", ens, " ", paste(staYear, "_", endYear, sep="")," \n\n")
# Loop around variables
for (var in varList) {
# Loop around months
for (mth in monthList) {
if (!file.exists(paste(avgDir, "/", staYear, "_", endYear, sep="")))
{dir.create(paste(avgDir, "/", staYear, "_", endYear, sep=""))}
# Define month without 0 in one digit number
mthMod <- as.numeric(paste((ndaymtx$MonthMod[which(ndaymtx$Month == mth)])))
outNcAvg <- paste(avgDir, "/", staYear, "_", endYear, "/", var, "_", mthMod, ".nc", sep="")
if (!file.exists(outNcAvg)){
# List of NetCDF files by month for all 30yr period
mthNc <- lapply(paste(mthDir, "/", staYear:endYear, "/", var, "_", mth, ".nc", sep=""), FUN=raster)
# Create a stack of list of NC, rotate and convert units in mm/monnth and deg celsious
if (var == "prec"){
daysmth <- as.numeric(paste((ndaymtx$Ndays[which(ndaymtx$Month == mth)])))
mthNcAvg <- rotate(mean(stack(mthNc))) * 86400 * (daysmth)
} else {
mthNcAvg <- rotate(mean(stack(mthNc))) - 272.15
}
# Write output average NetCDF file
mthNcAvg <- writeRaster(mthNcAvg, outNcAvg, format='CDF', overwrite=T)
cat(" .> ", paste(var, "_", mthMod, sep=""), "\tdone!\n")
} else {cat(" .>", paste(var, "_", mthMod, sep=""), "\tdone!\n")}
}
}
if(ens == "r1i1p1") {
# Get a table with resolution and extent by model
exNc <- raster(paste(avgDir, "/", staYear, "_", endYear, "/prec_1.nc", sep=""))
xRes <- xres(exNc)
yRes <- yres(exNc)
nCols <- ncol(exNc)
nRows <- nrow(exNc)
xMin <- xmin(exNc)
xMax <- xmax(exNc)
yMin <- ymin(exNc)
yMax <- ymax(exNc)
#             gcmChart <- cbind(rcp, gcm, xRes, yRes, nCols, nRows, xMin, xMax, yMin, yMax)
dataMatrix <- rbind(dataMatrix,c(rcp, gcm, xRes, yRes, nCols, nRows, xMin, xMax, yMin, yMax))
}
}
}
}
}
paste(as.matrix(gcmStats)[50,10]) == "ins-var"
for (i in 52:52){
# Don't include variables without all three variables
if(!paste(as.matrix(gcmStats)[i,10]) == "ins-var") {
if(!paste(as.matrix(gcmStats)[i,10]) == "ins-yr"){
# Get gcm and ensemble names
gcm <- paste(as.matrix(gcmStats)[i,2])
ens <- paste(as.matrix(gcmStats)[i,3])
# Path of each ensemble
ensDir <- paste(baseDir, "/", rcp, "/", gcm, "/", ens, sep="")
# Directory with monthly splitted files
mthDir <- paste(ensDir, "/monthly-files", sep="")
# Create output average directory
avgDir <- paste(ensDir, "/average", sep="")
if (!file.exists(avgDir)) {dir.create(avgDir)}
# Period list for historical and future pathways
if (rcp == "historical"){
periodList <- c("1961", "1971")
} else {
periodList <- c("2020", "2030", "2040", "2050", "2060", "2070")
}
# Loop around periods
for (period in periodList) {
# Define start and end year
staYear <- as.integer(period)
endYear <- as.integer(period) + 29
cat("\nAverage over: ", rcp, " ", gcm, " ", ens, " ", paste(staYear, "_", endYear, sep="")," \n\n")
# Loop around variables
for (var in varList) {
# Loop around months
for (mth in monthList) {
if (!file.exists(paste(avgDir, "/", staYear, "_", endYear, sep="")))
{dir.create(paste(avgDir, "/", staYear, "_", endYear, sep=""))}
# Define month without 0 in one digit number
mthMod <- as.numeric(paste((ndaymtx$MonthMod[which(ndaymtx$Month == mth)])))
outNcAvg <- paste(avgDir, "/", staYear, "_", endYear, "/", var, "_", mthMod, ".nc", sep="")
if (!file.exists(outNcAvg)){
# List of NetCDF files by month for all 30yr period
mthNc <- lapply(paste(mthDir, "/", staYear:endYear, "/", var, "_", mth, ".nc", sep=""), FUN=raster)
# Create a stack of list of NC, rotate and convert units in mm/monnth and deg celsious
if (var == "prec"){
daysmth <- as.numeric(paste((ndaymtx$Ndays[which(ndaymtx$Month == mth)])))
mthNcAvg <- rotate(mean(stack(mthNc))) * 86400 * (daysmth)
} else {
mthNcAvg <- rotate(mean(stack(mthNc))) - 272.15
}
# Write output average NetCDF file
mthNcAvg <- writeRaster(mthNcAvg, outNcAvg, format='CDF', overwrite=T)
cat(" .> ", paste(var, "_", mthMod, sep=""), "\tdone!\n")
} else {cat(" .>", paste(var, "_", mthMod, sep=""), "\tdone!\n")}
}
}
if(ens == "r1i1p1") {
# Get a table with resolution and extent by model
exNc <- raster(paste(avgDir, "/", staYear, "_", endYear, "/prec_1.nc", sep=""))
xRes <- xres(exNc)
yRes <- yres(exNc)
nCols <- ncol(exNc)
nRows <- nrow(exNc)
xMin <- xmin(exNc)
xMax <- xmax(exNc)
yMin <- ymin(exNc)
yMax <- ymax(exNc)
#             gcmChart <- cbind(rcp, gcm, xRes, yRes, nCols, nRows, xMin, xMax, yMin, yMax)
dataMatrix <- rbind(dataMatrix,c(rcp, gcm, xRes, yRes, nCols, nRows, xMin, xMax, yMin, yMax))
}
}
}
}
}
require(maptools)
require(raster)
require(ncdf)
require(rgdal)
require(sp)
# Loop around gcms and ensembles
for (i in 52:52){
# Don't include variables without all three variables
if(!paste(as.matrix(gcmStats)[i,10]) == "ins-var") {
if(!paste(as.matrix(gcmStats)[i,10]) == "ins-yr"){
# Get gcm and ensemble names
gcm <- paste(as.matrix(gcmStats)[i,2])
ens <- paste(as.matrix(gcmStats)[i,3])
# Path of each ensemble
ensDir <- paste(baseDir, "/", rcp, "/", gcm, "/", ens, sep="")
# Directory with monthly splitted files
mthDir <- paste(ensDir, "/monthly-files", sep="")
# Create output average directory
avgDir <- paste(ensDir, "/average", sep="")
if (!file.exists(avgDir)) {dir.create(avgDir)}
# Period list for historical and future pathways
if (rcp == "historical"){
periodList <- c("1961", "1971")
} else {
periodList <- c("2020", "2030", "2040", "2050", "2060", "2070")
}
# Loop around periods
for (period in periodList) {
# Define start and end year
staYear <- as.integer(period)
endYear <- as.integer(period) + 29
cat("\nAverage over: ", rcp, " ", gcm, " ", ens, " ", paste(staYear, "_", endYear, sep="")," \n\n")
# Loop around variables
for (var in varList) {
# Loop around months
for (mth in monthList) {
if (!file.exists(paste(avgDir, "/", staYear, "_", endYear, sep="")))
{dir.create(paste(avgDir, "/", staYear, "_", endYear, sep=""))}
# Define month without 0 in one digit number
mthMod <- as.numeric(paste((ndaymtx$MonthMod[which(ndaymtx$Month == mth)])))
outNcAvg <- paste(avgDir, "/", staYear, "_", endYear, "/", var, "_", mthMod, ".nc", sep="")
if (!file.exists(outNcAvg)){
# List of NetCDF files by month for all 30yr period
mthNc <- lapply(paste(mthDir, "/", staYear:endYear, "/", var, "_", mth, ".nc", sep=""), FUN=raster)
# Create a stack of list of NC, rotate and convert units in mm/monnth and deg celsious
if (var == "prec"){
daysmth <- as.numeric(paste((ndaymtx$Ndays[which(ndaymtx$Month == mth)])))
mthNcAvg <- rotate(mean(stack(mthNc))) * 86400 * (daysmth)
} else {
mthNcAvg <- rotate(mean(stack(mthNc))) - 272.15
}
# Write output average NetCDF file
mthNcAvg <- writeRaster(mthNcAvg, outNcAvg, format='CDF', overwrite=T)
cat(" .> ", paste(var, "_", mthMod, sep=""), "\tdone!\n")
} else {cat(" .>", paste(var, "_", mthMod, sep=""), "\tdone!\n")}
}
}
if(ens == "r1i1p1") {
# Get a table with resolution and extent by model
exNc <- raster(paste(avgDir, "/", staYear, "_", endYear, "/prec_1.nc", sep=""))
xRes <- xres(exNc)
yRes <- yres(exNc)
nCols <- ncol(exNc)
nRows <- nrow(exNc)
xMin <- xmin(exNc)
xMax <- xmax(exNc)
yMin <- ymin(exNc)
yMax <- ymax(exNc)
#             gcmChart <- cbind(rcp, gcm, xRes, yRes, nCols, nRows, xMin, xMax, yMin, yMax)
dataMatrix <- rbind(dataMatrix,c(rcp, gcm, xRes, yRes, nCols, nRows, xMin, xMax, yMin, yMax))
}
}
}
}
}
varList <- c("prec", "tmax", "tmin")
monthList <- c(1:12)
curDir <- paste(baseDir, "/historical", sep="")
futDir <- paste(baseDir, "/", rcp, sep="")
gcmList <- list.dirs(curDir, recursive = FALSE, full.names = FALSE)
gcmList
gcm <- gfcmList[14]
gcm <- gcmList[14]
gcm <- basename(gcm)
curEnsDir <- paste(curDir, "/", gcm, "/", ens, sep="")
curAvgDir <- paste(curEnsDir, "/average/", basePer, sep="")
periodList <- c("2020", "2030", "2040", "2050", "2060", "2070")
for (period in periodList) {
# Define start and end year
staYear <- as.integer(period)
endYear <- as.integer(period) + 29
futAvgDir <- paste(futDir, "/", gcm, "/", ens, "/average/", staYear, "_", endYear, sep="")
if (file.exists(futAvgDir)){
if (file.exists(curAvgDir)){
cat("\t Anomalies over: ", rcp, " ", gcm, " ", ens, " ", paste(staYear, "_", endYear, sep="")," \n\n")
# Create anomalies output directory
if (basePer == "1961_1990"){
anomDir <- paste(futDir, "/", gcm, "/", ens, "/anomalies_1975s", sep="")
anomPerDir <- paste(futDir, "/", gcm, "/", ens, "/anomalies_1975s/", staYear, "_", endYear, sep="")
} else if (basePer == "1971_2000") {
anomDir <- paste(futDir, "/", gcm, "/", ens, "/anomalies_1985s", sep="")
anomPerDir <- paste(futDir, "/", gcm, "/", ens, "/anomalies_1985s/", staYear, "_", endYear, sep="")
}
checkFile <- paste(anomDir, "/anomalies_", staYear, "_", endYear, "_done.txt", sep="")
if (!file.exists(checkFile)){
if (!file.exists(anomDir)) {dir.create(anomDir)}
if (!file.exists(anomPerDir)) {dir.create(anomPerDir)}
listNc <- list.files(anomPerDir, full.names=T, pattern="prec*")
do.call(unlink,list(listNc))
# Loop around variables
#             for (var in varList) {
# Loop around months
for (mth in monthList) {
outNc <- paste(anomPerDir, "/", var, "_", mth, ".nc", sep="")
if (!file.exists(outNc)) {
curAvgNc <- raster(paste(curAvgDir, "/", var, "_", mth, ".nc", sep=""))
futAvgNc <- raster(paste(futAvgDir, "/", var, "_", mth, ".nc", sep=""))
if (var == "prec" || var == "rsds"){
anomNc <- (futAvgNc - curAvgNc) / (curAvgNc + 0.5)
} else {
anomNc <- futAvgNc - curAvgNc
}
# resAnomNc  <- resample(anomNc, rs, method='ngb')
# rs <- raster(xmn=-180, xmx=180, ymn=-90, ymx=90)
# anomNcExt <- setExtent(anomNc, extent(rs), keepres=TRUE, snap=FALSE)
# resAnomNcExt  <- resample(anomNcExt, rs, method='bilinear')
anomNc <- writeRaster(anomNc, outNc, format='CDF', overwrite=FALSE)
}
outShp <- paste(anomPerDir, "/", var, "_", mth, ".shp", sep="")
if (!file.exists(outShp)) {
anomPts <- rasterToPoints(raster(outNc))
coords <- data.frame(anomPts[,1:2])
colnames(coords) <- c("LON", "LAT")
values <- data.frame(anomPts[,3])
colnames(values) <- c("VALUE")
anomPts <- SpatialPointsDataFrame(coords,values)
anomShp <- writePointsShape(anomPts, paste(anomPerDir, "/", var, "_", mth, sep=""))
cat(" .> Anomalies ", paste("\t ", var, "_", mth, sep=""), "\tdone!\n")
} else {cat(" .> Anomalies ", paste("\t ", var, "_", mth, sep=""), "\tdone!\n")}
}
#             }
}
}
}
write.table("Done!", checkFile, row.names=F)
}
anomDir
baseDir="T:/gcm/cmip5/raw/monthly"
ens="r1i1p1"
basePer="1961_1990"
varList <- c("prec", "tmax", "tmin")
#   var <- "prec"
monthList <- c(1:12)
curDir <- paste(baseDir, "/historical", sep="")
futDir <- paste(baseDir, "/", rcp, sep="")
gcmList <- list.dirs(curDir, recursive = FALSE, full.names = FALSE)
gcm <- gcmList[14]
gcm <- basename(gcm)
# Path of each ensemble
curEnsDir <- paste(curDir, "/", gcm, "/", ens, sep="")
# Average directory
curAvgDir <- paste(curEnsDir, "/average/", basePer, sep="")
periodList <- c("2020", "2030", "2040", "2050", "2060", "2070")
for (period in periodList) {
# Define start and end year
staYear <- as.integer(period)
endYear <- as.integer(period) + 29
futAvgDir <- paste(futDir, "/", gcm, "/", ens, "/average/", staYear, "_", endYear, sep="")
if (file.exists(futAvgDir)){
if (file.exists(curAvgDir)){
cat("\t Anomalies over: ", rcp, " ", gcm, " ", ens, " ", paste(staYear, "_", endYear, sep="")," \n\n")
# Create anomalies output directory
if (basePer == "1961_1990"){
anomDir <- paste(futDir, "/", gcm, "/", ens, "/anomalies_1975s", sep="")
anomPerDir <- paste(futDir, "/", gcm, "/", ens, "/anomalies_1975s/", staYear, "_", endYear, sep="")
} else if (basePer == "1971_2000") {
anomDir <- paste(futDir, "/", gcm, "/", ens, "/anomalies_1985s", sep="")
anomPerDir <- paste(futDir, "/", gcm, "/", ens, "/anomalies_1985s/", staYear, "_", endYear, sep="")
}
checkFile <- paste(anomDir, "/anomalies_", staYear, "_", endYear, "_done.txt", sep="")
if (!file.exists(checkFile)){
if (!file.exists(anomDir)) {dir.create(anomDir)}
if (!file.exists(anomPerDir)) {dir.create(anomPerDir)}
listNc <- list.files(anomPerDir, full.names=T, pattern="prec*")
do.call(unlink,list(listNc))
# Loop around variables
#             for (var in varList) {
# Loop around months
for (mth in monthList) {
outNc <- paste(anomPerDir, "/", var, "_", mth, ".nc", sep="")
if (!file.exists(outNc)) {
curAvgNc <- raster(paste(curAvgDir, "/", var, "_", mth, ".nc", sep=""))
futAvgNc <- raster(paste(futAvgDir, "/", var, "_", mth, ".nc", sep=""))
if (var == "prec" || var == "rsds"){
anomNc <- (futAvgNc - curAvgNc) / (curAvgNc + 0.5)
} else {
anomNc <- futAvgNc - curAvgNc
}
# resAnomNc  <- resample(anomNc, rs, method='ngb')
# rs <- raster(xmn=-180, xmx=180, ymn=-90, ymx=90)
# anomNcExt <- setExtent(anomNc, extent(rs), keepres=TRUE, snap=FALSE)
# resAnomNcExt  <- resample(anomNcExt, rs, method='bilinear')
anomNc <- writeRaster(anomNc, outNc, format='CDF', overwrite=FALSE)
}
outShp <- paste(anomPerDir, "/", var, "_", mth, ".shp", sep="")
if (!file.exists(outShp)) {
anomPts <- rasterToPoints(raster(outNc))
coords <- data.frame(anomPts[,1:2])
colnames(coords) <- c("LON", "LAT")
values <- data.frame(anomPts[,3])
colnames(values) <- c("VALUE")
anomPts <- SpatialPointsDataFrame(coords,values)
anomShp <- writePointsShape(anomPts, paste(anomPerDir, "/", var, "_", mth, sep=""))
cat(" .> Anomalies ", paste("\t ", var, "_", mth, sep=""), "\tdone!\n")
} else {cat(" .> Anomalies ", paste("\t ", var, "_", mth, sep=""), "\tdone!\n")}
}
#             }
}
}
}
write.table("Done!", checkFile, row.names=F)
}
anomDir
basePer == "1961_1990"
anomDir <- paste(futDir, "/", gcm, "/", ens, "/anomalies_1975s", sep="")
anomDir
baseDir="T:/gcm/cmip5/raw/monthly"
varList <- c("prec", "tmax", "tmin")
#   var <- "prec"
monthList <- c(1:12)
curDir <- paste(baseDir, "/historical", sep="")
futDir <- paste(baseDir, "/", rcp, sep="")
gcmList <- list.dirs(curDir, recursive = FALSE, full.names = FALSE)
gcm <- gcmList[14]
gcm <- basename(gcm)
curEnsDir <- paste(curDir, "/", gcm, "/", ens, sep="")
# Average directory
curAvgDir <- paste(curEnsDir, "/average/", basePer, sep="")
periodList <- c("2020", "2030", "2040", "2050", "2060", "2070")
staYear <- as.integer(period)
endYear <- as.integer(period) + 29
staYear
futAvgDir <- paste(futDir, "/", gcm, "/", ens, "/average/", staYear, "_", endYear, sep="")
futAvgDir
futDir
var <- "prec"
rcp='rcp26'
baseDir="T:/gcm/cmip5/raw/monthly"
ens="r1i1p1"
basePer="1961_1990"
monthList <- c(1:12)
nameFileOut="/eq0_cur1_hist-historical-"
curDir <- paste(baseDir, "/historical", sep="")
futDir <- paste(baseDir, "/", rcp, sep="")
gcmList <- list.dirs(curDir, recursive = FALSE, full.names = FALSE)
gcmList
gcm <- gcmList[29]
gcm <- basename(gcm)
curEnsDir <- paste(curDir, "/", gcm, "/", ens, sep="")
curAvgDir <- paste(curEnsDir, "/average/", basePer, sep="")
periodList <- c("2020", "2030", "2040", "2050", "2060", "2070")
period <- periodList[3]
period
staYear <- as.integer(period)
endYear <- as.integer(period) + 29
futAvgDir <- paste(futDir, "/", gcm, "/", ens, "/average/", staYear, "_", endYear, sep="")
anomDir <- paste(futDir, "/", gcm, "/", ens, "/anomalies_1975s", sep="")
anomPerDir <- paste(futDir, "/", gcm, "/", ens, "/anomalies_1975s/", staYear, "_", endYear, sep="")
dataMatrix <- c("rcp","model","var")
mth <- monthList[6]
mth
outNc <- paste(anomPerDir, "/", var, "_", mth, ".nc", sep="")
curAvgNc <- raster(paste(curAvgDir, "/", var, "_", mth, ".nc", sep=""))
library(raster)
library(ncdf)
curAvgNc <- raster(paste(curAvgDir, "/", var, "_", mth, ".nc", sep=""))
futAvgNc <- raster(paste(futAvgDir, "/", var, "_", mth, ".nc", sep=""))
curAvgNc
plot(curAvgNc)
min(curAvgNc)
setMinMax(curAvgNc)
plot(futAvgNc)
setMinMax
setMinMax(futAvgNc)
curAvgNc[curAvgNc[]>0.1] <- NA
plot(curAvgNc)
library(maptools)
plot(wrld_simpl[wrld_simpl, add=T)
plot(wrld_simpl[wrld_simpl, add=T))
plot(wrld_simpl, add=T)
data(wrld_simpl)
plot(wrld_simpl, add=T)
futAvgNc[futAvgNc[]>0.1] <- NA
plot(futAvgNc)
library(maptools)
data(wrld_simpl)
plot(wrld_simpl, add=T)
futAvgNc <- raster(paste(futAvgDir, "/", var, "_", mth, ".nc", sep=""))
plot(futAvgNc)
library(maptools)
data(wrld_simpl)
plot(wrld_simpl, add=T)
futAvgNc[futAvgNc[]>200] <- NA
plot(futAvgNc)
library(maptools)
data(wrld_simpl)
plot(wrld_simpl, add=T)
curAvgNc <- raster(paste(curAvgDir, "/", var, "_", mth, ".nc", sep=""))
futAvgNc <- raster(paste(futAvgDir, "/", var, "_", mth, ".nc", sep=""))
curAvgNc[curAvgNc[]<0.5] <- 0.5
futAvgNc[futAvgNc[]<0.5] <- 0.5
anomNc <- (futAvgNc - curAvgNc) / (curAvgNc)
centroids=rasterToPoints(anomNc)
df <- data.frame(centroids)
lon=df[which.max(df[,3]),]$x
lat=df[which.max(df[,3]),]$y
cur=extract(curAvgNc,cbind(lon, lat))
favg=extract(futAvgNc,cbind(lon, lat))
(favg-cur)/cur
extract(anomNc,cbind(lon, lat))
cur
favg
curAvgNc[curAvgNc[]<0.1] <- 0.1
futAvgNc[futAvgNc[]<0.1] <- 0.1
curAvgNc <- raster(paste(curAvgDir, "/", var, "_", mth, ".nc", sep=""))
futAvgNc <- raster(paste(futAvgDir, "/", var, "_", mth, ".nc", sep=""))
curAvgNc[curAvgNc[]<0.1] <- 0.1
futAvgNc[futAvgNc[]<0.1] <- 0.1
anomNc <- (futAvgNc - curAvgNc) / (curAvgNc)
centroids=rasterToPoints(anomNc)
df <- data.frame(centroids)
lon=df[which.max(df[,3]),]$x
lat=df[which.max(df[,3]),]$y
cur=extract(curAvgNc,cbind(lon, lat))
favg=extract(futAvgNc,cbind(lon, lat))
(favg-cur)/cur
extract(anomNc,cbind(lon, lat))
cur
favg
extract(anomNc,cbind(lon, lat))
curAvgNc <- raster(paste(curAvgDir, "/", var, "_", mth, ".nc", sep=""))
futAvgNc <- raster(paste(futAvgDir, "/", var, "_", mth, ".nc", sep=""))
curAvgNc[curAvgNc[]<1] <- 1
futAvgNc[futAvgNc[]<1] <- 1
anomNc <- (futAvgNc - curAvgNc) / (curAvgNc)
centroids=rasterToPoints(anomNc)
df <- data.frame(centroids)
lon=df[which.max(df[,3]),]$x
lat=df[which.max(df[,3]),]$y
cur=extract(curAvgNc,cbind(lon, lat))
favg=extract(futAvgNc,cbind(lon, lat))
(favg-cur)/cur
extract(anomNc,cbind(lon, lat))
cur
favg
favg/cur
(favg-cur)/cur
(favg-cur)/cur*100
curAvgNc <- raster(paste(curAvgDir, "/", var, "_", mth, ".nc", sep=""))
futAvgNc <- raster(paste(futAvgDir, "/", var, "_", mth, ".nc", sep=""))
curAvgNc[curAvgNc[]=!0] <- NA
curAvgNc[curAvgNc[]<>0] <- NA
curAvgNc[curAvgNc[]!=0] <- NA
plot(curAvgNc)
library(maptools)
data(wrld_simpl)
plot(wrld_simpl, add=T)
curAvgNc <- raster(paste(curAvgDir, "/", var, "_", mth, ".nc", sep=""))
curAvgNc[curAvgNc[]<0.5] <- 0.5
plot(curAvgNc)
curAvgNc <- raster(paste(curAvgDir, "/", var, "_", mth, ".nc", sep=""))
curAvgNc[curAvgNc[]<0.5] <- NA
plot(curAvgNc)
curAvgNc <- raster(paste(curAvgDir, "/", var, "_", mth, ".nc", sep=""))
curAvgNc[curAvgNc[]>0.5] <- NA
plot(curAvgNc)
library(maptools)
data(wrld_simpl)
plot(wrld_simpl, add=T)
curAvgNc <- raster(paste(curAvgDir, "/", var, "_", mth, ".nc", sep=""))
curAvgNc[curAvgNc[]>1] <- NA
plot(curAvgNc)
library(maptools)
data(wrld_simpl)
plot(wrld_simpl, add=T)
windows()
plot(curAvgNc)
plot(wrld_simpl, add=T)
plot(curAvgNc)
plot(wrld_simpl, add=T)
curAvgNc <- raster(paste(curAvgDir, "/", var, "_", mth, ".nc", sep=""))
curAvgNc[curAvgNc[]>0.5] <- NA
windows()
plot(curAvgNc)
plot(wrld_simpl, add=T)
