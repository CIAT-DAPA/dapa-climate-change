chirps_all = stack(chirps_stk)
na_per <- function(a,na.rm=T){
na.x = length(which(is.na(a))) / length(a)
x = na.x
return(x)
}
st_data_na = apply(st_data,2,na_per)
st_data_filter = st_data[,which(as.vector(na.stations)<=0.66)]
View(st_data_filter)
######################
### 01- Gaps plots ###
######################
gap_plot <- function(bDir="Z:/DATA/WP2/01_Weather_Stations", dst="GHCN",var="prec", rg=c(-79.5, -72, -11.9, 3), sY=1971, fY=2010, rgname, oDir="Z:/DATA/WP2/04_Evaluations/WTH_ST"){
library(reshape)
library(ggplot2)
require(raster)
require(gridExtra)
# Set region extent
rgExt <- extent(rg)
# Read monthly weather file & select years
monDt <- read.csv(paste0(bDir, "/", dst, "/", var, "_monthly_all.csv"), header = T)
monDt <- monDt[ which(monDt$Year >= sY & monDt$Year <= fY),]
monDt$year <- NULL
monDt$month <- NULL
# Read Station info file
stInfo <- read.csv(paste0(bDir, "/", dst, "/stations.csv"), header = T)
# Read name by dataset
if (dst == "COL"){
names(monDt) <- gsub("X", "", names(monDt))
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
} else if (dst == "GHCN"){
names(monDt) <- gsub("X", "", names(monDt))
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
names(stInfo) <- c("Station", "Lat", "Lon", "Alt", "Name")
} else if (dst == "ECU") {
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
} else if (dst == "GSOD") {
names(monDt) <- gsub("X", "", names(monDt))
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
} else if (dst == "BRA"){
names(monDt) <- gsub("X", "", names(monDt))
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
} else if (dst == "PER"){
names(monDt) <- gsub("X", "", names(monDt))
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
}
# Select stations within region
join <- merge(stCod, stInfo, by = "Station", all = FALSE)
posXY = join$Lon < xmin(rgExt) | join$Lon > xmax(rgExt) | join$Lat < ymin(rgExt) | join$Lat > ymax(rgExt)
join <- join[!posXY, ]
monDtSel = monDt[, which(names(monDt) %in% as.vector(join$Station))]
# Remove columns with all NA's
monDtSel <- monDtSel[,colSums(is.na(monDtSel)) < nrow(monDtSel)]
# Remove columns with less of 30% of data
monDtSel <- monDtSel[,(colSums(is.na(monDtSel)) / nrow(monDtSel)) < 0.66]
monDtSel <- cbind("Year"=monDt$Year, "Month"= monDt$Month, monDtSel)
dates <- paste0(monDtSel$Year, sprintf("%02d", monDtSel$Month), "01" )
dates <- as.Date(as.character(dates), format = "%Y%m%d")
# Create a matrix of position to locate bars in plot
posMt = as.data.frame(matrix(NA, nrow(monDtSel), ncol(monDtSel)-2))
nbreaks <- 5
for(j in 1:ncol(posMt)){ posMt[,j] <- (j - 1) * nbreaks }
# Data transformation
monDtSel <- cbind("Date" = dates, monDtSel[,3:ncol(monDtSel)] * 0 + posMt)
monDtSel_ls <- melt(monDtSel, id.vars="Date")
max <- max(monDtSel_ls$value, na.rm = T)
if (var == "prec"){
color="steelblue"
} else if(var == "tmax"){
color = "red"
} else {
color = "orange"
}
listP <- list()
if (length(unique(monDtSel_ls$variable)) > 190){
# Plot up to 5 columns files
chunk <- 190 * length(dates)
n <- nrow(monDtSel_ls)
r  <- rep(1:ceiling(n/chunk),each=chunk)[1:n]
monDtSel_splt <- split(monDtSel_ls,r)
plots <- paste(letters)
for (i in 1:length(monDtSel_splt)){
assign(plots[i],
ggplot(monDtSel_splt[[i]], aes(x=Date, y=value, group=variable, size=nbreaks)) + geom_line(color=color) +
scale_y_continuous(breaks=seq(0, max, nbreaks), labels=unique(monDtSel_ls$variable), expand = c(0, 0)) +
labs(x = "Date", y = "Stations") +
# geom_rect(aes(xmin = as.Date("1971-01-01"), xmax = as.Date("2000-01-01"), ymin = -Inf, ymax = Inf), alpha = 0.2) +
# geom_vline(xintercept = as.numeric(as.Date(c("1971-01-01", "2000-01-01"))), colour="red") +
# geom_vline(xintercept = as.numeric(as.Date(c("1976-01-01", "2005-01-01"))), colour="green") +
geom_vline(xintercept = as.numeric(as.Date(c("1986-01-01", "2005-01-01"))), colour="black") +
theme(legend.position="none")
)
listP <- c(listP, plots[i])
}
tiff(paste(oDir, "/temporal_coverage_monthly_", var, "_", tolower(dst), "_", rgname, "_", sY, "_", fY, "_na30.tif", sep=""), width=500 * length(listP), height = 4000, pointsize=8, compression='lzw',res=100)
if (length(listP) == 2){
grid.arrange(get(listP[[1]]), get(listP[[2]]), ncol=length(listP))
} else if (length(listP) == 3) {
grid.arrange(get(listP[[1]]), get(listP[[2]]), get(listP[[3]]), ncol=length(listP))
} else if (length(listP) == 4) {
grid.arrange(get(listP[[1]]), get(listP[[2]]), get(listP[[3]]),get(listP[[4]]), ncol=length(listP))
} else if (length(listP) == 5) {
grid.arrange(get(listP[[1]]), get(listP[[2]]), get(listP[[3]]),get(listP[[4]]),get(listP[[5]]), ncol=length(listP))
}
dev.off()
} else {
tiff(paste(oDir, "/temporal_coverage_monthly_", var, "_", tolower(dst), "_", rgname, "_", sY, "_", fY, "_na30.tif", sep=""), width=500, height = 4000, pointsize=8, compression='lzw',res=100)
p <- ggplot(monDtSel_ls, aes(x=Date, y=value, group=variable, size=nbreaks)) + geom_line(color=color) +
scale_y_continuous(breaks=seq(0, max, nbreaks), labels=unique(monDtSel_ls$variable), expand = c(0, 0)) +
labs(x = "Date", y = "Stations") +
# geom_vline(xintercept = as.numeric(as.Date(c("1971-01-01", "2000-01-01"))), colour="red") +
# geom_vline(xintercept = as.numeric(as.Date(c("1976-01-01", "2005-01-01"))), colour="green") +
geom_vline(xintercept = as.numeric(as.Date(c("1986-01-01", "2005-01-01"))), colour="black") +
theme(legend.position="none")
print(p)
dev.off()
}
}
######################
### 02- Map NAs ###
######################
map_na <- function(bDir="Z:/DATA/WP2/01_Weather_Stations", dst="GHCN", var="prec", rg=c(-79.5, -72, -11.9, 3), sY=1971, fY=2010, rgname, oDir="Z:/DATA/WP2/04_Evaluations/WTH_ST", mskDir="Z:/GEODATA/AMAZON/SHAPEFILES/Ecoregions", type="nas"){
library(reshape)
library(ggplot2)
require(raster)
require(rgeos)
require(rgdal)
# Set region extent
rgExt <- extent(rg)
# mskNap <- readOGR(paste0(mskDir, "/tnc_terrestial_ecoregions_napo.shp"), layer= "tnc_terrestial_ecoregions_napo")
mskAmz <- readOGR(paste0(mskDir, "/rg_poly_amazon_border.shp"), layer= "rg_poly_amazon_border")
mskCnt <- readOGR(paste0(mskDir, "/rg_poly_countries.shp"), layer= "rg_poly_countries")
# mskNap@data$id <- rownames(mskNap@data); nap_region <- fortify(mskNap)
mskAmz@data$id <- rownames(mskAmz@data); amz_region <- fortify(mskAmz)
mskCnt@data$id <- rownames(mskCnt@data); cnt_region <- fortify(mskCnt)
z1 <- readOGR("Z:/GEODATA/PE/SHAPEFILES/Area_Estudio/Reprojected/per_prj.shp", layer= "per_prj")
z2 <- readOGR("Z:/GEODATA/COL/SHAPEFILES/Area_Estudio/Reprojected/col_prj.shp", layer= "col_prj")
z1@data$id <- rownames(z1@data); z1_reg <- fortify(z1)
z2@data$id <- rownames(z2@data); z2_reg <- fortify(z2)
naMt <- c()
dstList <- c("COL", "ECU", "GHCN", "GSOD")
periodLs <- c(1971, 1986, 1981)
for (dst in dstList){
# Read monthly weather file & select years
monDt <- read.csv(paste0(bDir, "/", dst, "/", var, "_monthly_all.csv"), header = T)
monDt <- monDt[ which(monDt$Year >= sY & monDt$Year <= fY),]
monDt$year <- NULL
monDt$month <- NULL
# Read Station info file
stInfo <- read.csv(paste0(bDir, "/", dst, "/stations.csv"), header = T)
# Read name by dataset
if (dst == "COL"){
names(monDt) <- gsub("X", "", names(monDt))
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
} else if (dst == "GHCN"){
names(monDt) <- gsub("X", "", names(monDt))
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
names(stInfo) <- c("Station", "Lat", "Lon", "Alt", "Name")
} else if (dst == "ECU") {
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
} else if (dst == "GSOD") {
names(monDt) <- gsub("X", "", names(monDt))
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
}
# Select stations within region
join <- merge(stCod, stInfo, by = "Station", all = FALSE)
posXY = join$Lon < xmin(rgExt) | join$Lon > xmax(rgExt) | join$Lat < ymin(rgExt) | join$Lat > ymax(rgExt)
join <- join[!posXY, ]
monDtSel = cbind("Month"=monDt$Month, "Year"=monDt$Year, monDt[, which(names(monDt) %in% as.vector(join$Station))] )
# NA count by periods
for (period in periodLs){
if (period == 1986){
monDtSel_yrs <- monDtSel[ which(monDtSel$Year >= period & monDtSel$Year <= period+19), ]
if(type == "nas"){
na_calc <- round(colSums(is.na(monDtSel_yrs[3:ncol(monDtSel_yrs)])) / nrow(monDtSel_yrs) , digits = 1)
} else {
na_calc <- round(colSums(!is.na(monDtSel_yrs[3:ncol(monDtSel_yrs)])) / nrow(monDtSel_yrs) , digits = 1)
}
na_count <- cbind("Station" = names(na_calc), "NAs" = na_calc, "Period"= paste0(period, "-", period+19))
} else {
monDtSel_yrs <- monDtSel[ which(monDtSel$Year >= period & monDtSel$Year <= period+29), ]
if(type == "nas"){
na_calc <- round(colSums(is.na(monDtSel_yrs[3:ncol(monDtSel_yrs)])) / nrow(monDtSel_yrs) , digits = 1)
} else {
na_calc <- round(colSums(!is.na(monDtSel_yrs[3:ncol(monDtSel_yrs)])) / nrow(monDtSel_yrs) , digits = 1)
}
na_count <- cbind("Station" = names(na_calc), "NAs" = na_calc, "Period"= paste0(period, "-", period+29))
}
na_count <- merge(na_count, join[ , c("Station", "Lat", "Lon")], by = "Station", all = FALSE)
# Merge to NAs Matrix of all datasets
naMt <- rbind(naMt, na_count)
}
}
if (var == "prec"){
uplimit <- 0; dwlimit <- 100; step <- 20; low <- "red"; mid <- "yellow"; high <- "blue"; uplimit_size <- 0; dwlimit_size <- 1; step_size <- 0.2; size = 1.2
} else if (var == "tmax") {
uplimit <- 0; dwlimit <- 100; step <- 20 ; low <- "white"; mid <- "yellow"; high <- "red"; uplimit_size <- 0; dwlimit_size <- 1; step_size <- 0.2; size = 1.2
} else if (var == "tmin") {
uplimit <- 0; dwlimit <- 100; step <- 20 ; low <- "white"; mid <- "yellow"; high <- "red"; uplimit_size <- 0; dwlimit_size <- 1; step_size <- 0.2; size = 1.2
}
naMt$NAs = as.numeric(as.character(naMt$NAs)) * 100
if(type == "nas"){name= "% NAs"} else {name= "% Data"}
p <- ggplot() +
# geom_polygon(data=nap_region, aes(x=long, y=lat, fill=hole,group=group),fill="grey 80") +
geom_polygon(data=cnt_region, aes(x=long, y=lat, fill=hole,group=group),fill="grey 80") +
geom_path(data=amz_region,aes(long,lat,group=group,fill=hole),color="forestgreen",size=0.3) +
geom_path(data=cnt_region,aes(long,lat,group=group,fill=hole),color="white",size=0.3) +
scale_fill_manual(values=c("grey 80","grey 80")) +
# geom_path(aes(long,lat,group=group,fill=hole),color="white",size=0.3) +
geom_path(data=z1_reg,aes(long,lat,group=group,fill=hole),color="black",size=0.3) +
geom_path(data=z2_reg,aes(long,lat,group=group,fill=hole),color="black",size=0.3) +
geom_point(data=naMt, aes(x=Lon, y=Lat, map_id=Station, col=NAs), size = size) +
# geom_point(data=naMt, aes(x=Lon, y=Lat), shape = 1, colour = "black", size=1.5) +
scale_color_gradient2(name=name, low = low, mid = mid, high = high,
limits=c(uplimit,dwlimit), guide="colourbar",
breaks=seq(uplimit,dwlimit,by=step), labels=paste(seq(uplimit,dwlimit,by=step))) +
scale_size(limits=c(uplimit,dwlimit)) +
scale_x_continuous(limits=c(xmin(rgExt)-0.25, xmax(rgExt)+0.25), expand = c(0, 0)) +
scale_y_continuous(limits=c(ymin(rgExt)-0.25, ymax(rgExt)+0.25), expand = c(0, 0)) +
facet_grid(.~ Period, scales="free_x", space="free") +
coord_equal() +
theme(legend.text=element_text(size=10), #panel.background=element_rect(fill="white",colour="black"),
axis.text=element_text(colour="black",size=9), strip.text=element_text(colour="black",size=12)) +
xlab("") +
ylab("")
tiff(paste(oDir, "/map_", type, "_monthly_", var, "_", rgname, "_lr.tif", sep=""), width=1200, height = 570, pointsize=8, compression='lzw',res=100)
print(p)
dev.off()
}
#########################################
### 03- Available stations by period  ###
#########################################
clim_plot <- function(bDir="Z:/DATA/WP2/01_Weather_Stations/MERGE", rgname, oDir="Z:/DATA/WP2/04_Evaluations/WTH_ST", rg=c(-79.5, -72, -11.9, 3), mskDir="Z:/GEODATA/AMAZON/SHAPEFILES/Ecoregions"){
library(reshape)
library(ggplot2)
require(raster)
require(rgeos)
require(rgdal)
# Set region extent
rgExt <- extent(rg)
varList <- c("prec", "tmax", "tmin")
periodLs <- c(1971, 1986, 1981)
# mskNap <- readOGR(paste0(mskDir, "/tnc_terrestial_ecoregions_napo.shp"), layer= "tnc_terrestial_ecoregions_napo")
mskAmz <- readOGR(paste0(mskDir, "/rg_poly_amazon_border.shp"), layer= "rg_poly_amazon_border")
mskCnt <- readOGR(paste0(mskDir, "/rg_poly_countries.shp"), layer= "rg_poly_countries")
# mskNap@data$id <- rownames(mskNap@data); nap_region <- fortify(mskNap)
mskAmz@data$id <- rownames(mskAmz@data); amz_region <- fortify(mskAmz)
mskCnt@data$id <- rownames(mskCnt@data); cnt_region <- fortify(mskCnt)
z1 <- readOGR("Z:/GEODATA/PE/SHAPEFILES/Area_Estudio/Reprojected/per_prj.shp", layer= "per_prj")
z2 <- readOGR("Z:/GEODATA/COL/SHAPEFILES/Area_Estudio/Reprojected/col_prj.shp", layer= "col_prj")
z1@data$id <- rownames(z1@data); z1_reg <- fortify(z1)
z2@data$id <- rownames(z2@data); z2_reg <- fortify(z2)
for (var in varList){
clim_all <- c()
# Colors and sizes for plots
if (var == "prec"){
color = "blue"
} else if (var == "tmax"){
color = "red"
} else if (var == "tmin"){
color = "orange"
}
for (period in periodLs){
if (period == 1986){
# Read climatological data files
climDt <- read.csv(paste0(bDir, "/", var, "_climatology_", as.character(period), "_", as.character(period+19), ".csv"), header = T)
clim_all <- rbind(clim_all, cbind(climDt[, c("ID", "LONG", "LAT")], "PERIOD"=paste0(as.character(period), "_", as.character(period+19))) )
} else {
# Read climatological data files
climDt <- read.csv(paste0(bDir, "/", var, "_climatology_", as.character(period), "_", as.character(period+29), ".csv"), header = T)
clim_all <- rbind(clim_all, cbind(climDt[, c("ID", "LONG", "LAT")], "PERIOD"=paste0(as.character(period), "_", as.character(period+29))) )
}
}
p <- ggplot() +
# geom_polygon(data=nap_region, aes(x=long, y=lat, fill=hole,group=group),fill="grey 80") +
geom_polygon(data=cnt_region, aes(x=long, y=lat, fill=hole,group=group),fill="grey 80") +
geom_path(data=amz_region,aes(long,lat,group=group,fill=hole),color="forestgreen",size=0.3) +
geom_path(data=cnt_region,aes(long,lat,group=group,fill=hole),color="white",size=0.3) +
scale_fill_manual(values=c("grey 80","grey 80")) +
# geom_path(aes(long,lat,group=group,fill=hole),color="white",size=0.3) +
geom_path(data=z1_reg,aes(long,lat,group=group,fill=hole),color="black",size=0.3) +
geom_path(data=z2_reg,aes(long,lat,group=group,fill=hole),color="black",size=0.3) +
geom_point(data=clim_all, aes(x=LONG, y=LAT), colour = color, size=1.5) +
scale_x_continuous(limits=c(xmin(rgExt)-0.25, xmax(rgExt)+0.25), expand = c(0, 0)) +
scale_y_continuous(limits=c(ymin(rgExt)-0.25, ymax(rgExt)+0.25), expand = c(0, 0)) +
facet_grid(~ PERIOD, scales="free_x", space="free") +
coord_equal() +
theme(legend.text=element_text(size=10), #panel.background=element_rect(fill="white",colour="black"),
axis.text=element_text(colour="black",size=9), strip.text=element_text(colour="black",size=12)) +
xlab("") +
ylab("")
tiff(paste(oDir, "/map_cover_climatology_", var, "_", rgname, "_lr.tif", sep=""), width=1200, height = 580, pointsize=8, compression='lzw',res=100)
print(p)
dev.off()
}
}
bDir="Z:/DATA/WP2/01_Weather_Stations"
# dst="GSOD"
rg=c(-79.5, -70, -11, 2)
# rg <- c(-80, -66, -16, 5)
rgname <- "amazon"
sY=1971
fY=2010
oDir="Z:/DATA/WP2/04_Evaluations/01_weather_stations_comparissons"
varList <- c("prec", "tmax", "tmin")
dstList <- c("COL", "ECU", "GHCN", "GSOD", "BRA", "PER")
# dst <- "ECU"
for (dst in dstList){
for (var in varList){
gap_plot(bDir, dst, var, rg, sY, fY, rgname, oDir)
}
}
######################
### 02- Map NAs ###
######################
map_na <- function(bDir="Z:/DATA/WP2/01_Weather_Stations", dst="GHCN", var="prec", rg=c(-79.5, -72, -11.9, 3), sY=1971, fY=2010, rgname, oDir="Z:/DATA/WP2/04_Evaluations/WTH_ST", mskDir="Z:/GEODATA/AMAZON/SHAPEFILES/Ecoregions", type="nas"){
library(reshape)
library(ggplot2)
require(raster)
require(rgeos)
require(rgdal)
# Set region extent
rgExt <- extent(rg)
# mskNap <- readOGR(paste0(mskDir, "/tnc_terrestial_ecoregions_napo.shp"), layer= "tnc_terrestial_ecoregions_napo")
mskAmz <- readOGR(paste0(mskDir, "/rg_poly_amazon_border.shp"), layer= "rg_poly_amazon_border")
mskCnt <- readOGR(paste0(mskDir, "/rg_poly_countries.shp"), layer= "rg_poly_countries")
# mskNap@data$id <- rownames(mskNap@data); nap_region <- fortify(mskNap)
mskAmz@data$id <- rownames(mskAmz@data); amz_region <- fortify(mskAmz)
mskCnt@data$id <- rownames(mskCnt@data); cnt_region <- fortify(mskCnt)
z1 <- readOGR("Z:/GEODATA/PE/SHAPEFILES/Area_Estudio/Reprojected/per_prj.shp", layer= "per_prj")
z2 <- readOGR("Z:/GEODATA/COL/SHAPEFILES/Area_Estudio/Reprojected/col_prj.shp", layer= "col_prj")
z1@data$id <- rownames(z1@data); z1_reg <- fortify(z1)
z2@data$id <- rownames(z2@data); z2_reg <- fortify(z2)
naMt <- c()
dstList <- c("COL", "ECU", "GHCN", "GSOD")
periodLs <- c(1971, 1986, 1981)
for (dst in dstList){
# Read monthly weather file & select years
monDt <- read.csv(paste0(bDir, "/", dst, "/", var, "_monthly_all.csv"), header = T)
monDt <- monDt[ which(monDt$Year >= sY & monDt$Year <= fY),]
monDt$year <- NULL
monDt$month <- NULL
# Read Station info file
stInfo <- read.csv(paste0(bDir, "/", dst, "/stations.csv"), header = T)
# Read name by dataset
if (dst == "COL"){
names(monDt) <- gsub("X", "", names(monDt))
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
} else if (dst == "GHCN"){
names(monDt) <- gsub("X", "", names(monDt))
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
names(stInfo) <- c("Station", "Lat", "Lon", "Alt", "Name")
} else if (dst == "ECU") {
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
} else if (dst == "GSOD") {
names(monDt) <- gsub("X", "", names(monDt))
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
} else if (dst == "BRA") {
names(monDt) <- gsub("X", "", names(monDt))
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
} else if (dst == "PER") {
names(monDt) <- gsub("X", "", names(monDt))
stCod <- data.frame(Station=names(monDt[3:length(monDt)]))
}
# Select stations within region
join <- merge(stCod, stInfo, by = "Station", all = FALSE)
posXY = join$Lon < xmin(rgExt) | join$Lon > xmax(rgExt) | join$Lat < ymin(rgExt) | join$Lat > ymax(rgExt)
join <- join[!posXY, ]
monDtSel = cbind("Month"=monDt$Month, "Year"=monDt$Year, monDt[, which(names(monDt) %in% as.vector(join$Station))] )
# NA count by periods
for (period in periodLs){
if (period == 1986){
monDtSel_yrs <- monDtSel[ which(monDtSel$Year >= period & monDtSel$Year <= period+19), ]
if(type == "nas"){
na_calc <- round(colSums(is.na(monDtSel_yrs[3:ncol(monDtSel_yrs)])) / nrow(monDtSel_yrs) , digits = 1)
} else {
na_calc <- round(colSums(!is.na(monDtSel_yrs[3:ncol(monDtSel_yrs)])) / nrow(monDtSel_yrs) , digits = 1)
}
na_count <- cbind("Station" = names(na_calc), "NAs" = na_calc, "Period"= paste0(period, "-", period+19))
} else {
monDtSel_yrs <- monDtSel[ which(monDtSel$Year >= period & monDtSel$Year <= period+29), ]
if(type == "nas"){
na_calc <- round(colSums(is.na(monDtSel_yrs[3:ncol(monDtSel_yrs)])) / nrow(monDtSel_yrs) , digits = 1)
} else {
na_calc <- round(colSums(!is.na(monDtSel_yrs[3:ncol(monDtSel_yrs)])) / nrow(monDtSel_yrs) , digits = 1)
}
na_count <- cbind("Station" = names(na_calc), "NAs" = na_calc, "Period"= paste0(period, "-", period+29))
}
na_count <- merge(na_count, join[ , c("Station", "Lat", "Lon")], by = "Station", all = FALSE)
# Merge to NAs Matrix of all datasets
naMt <- rbind(naMt, na_count)
}
}
if (var == "prec"){
uplimit <- 0; dwlimit <- 100; step <- 20; low <- "red"; mid <- "yellow"; high <- "blue"; uplimit_size <- 0; dwlimit_size <- 1; step_size <- 0.2; size = 1.2
} else if (var == "tmax") {
uplimit <- 0; dwlimit <- 100; step <- 20 ; low <- "white"; mid <- "yellow"; high <- "red"; uplimit_size <- 0; dwlimit_size <- 1; step_size <- 0.2; size = 1.2
} else if (var == "tmin") {
uplimit <- 0; dwlimit <- 100; step <- 20 ; low <- "white"; mid <- "yellow"; high <- "red"; uplimit_size <- 0; dwlimit_size <- 1; step_size <- 0.2; size = 1.2
}
naMt$NAs = as.numeric(as.character(naMt$NAs)) * 100
if(type == "nas"){name= "% NAs"} else {name= "% Data"}
p <- ggplot() +
# geom_polygon(data=nap_region, aes(x=long, y=lat, fill=hole,group=group),fill="grey 80") +
geom_polygon(data=cnt_region, aes(x=long, y=lat, fill=hole,group=group),fill="grey 80") +
geom_path(data=amz_region,aes(long,lat,group=group,fill=hole),color="forestgreen",size=0.3) +
geom_path(data=cnt_region,aes(long,lat,group=group,fill=hole),color="white",size=0.3) +
scale_fill_manual(values=c("grey 80","grey 80")) +
# geom_path(aes(long,lat,group=group,fill=hole),color="white",size=0.3) +
geom_path(data=z1_reg,aes(long,lat,group=group,fill=hole),color="black",size=0.3) +
geom_path(data=z2_reg,aes(long,lat,group=group,fill=hole),color="black",size=0.3) +
geom_point(data=naMt, aes(x=Lon, y=Lat, map_id=Station, col=NAs), size = size) +
# geom_point(data=naMt, aes(x=Lon, y=Lat), shape = 1, colour = "black", size=1.5) +
scale_color_gradient2(name=name, low = low, mid = mid, high = high,
limits=c(uplimit,dwlimit), guide="colourbar",
breaks=seq(uplimit,dwlimit,by=step), labels=paste(seq(uplimit,dwlimit,by=step))) +
scale_size(limits=c(uplimit,dwlimit)) +
scale_x_continuous(limits=c(xmin(rgExt)-0.25, xmax(rgExt)+0.25), expand = c(0, 0)) +
scale_y_continuous(limits=c(ymin(rgExt)-0.25, ymax(rgExt)+0.25), expand = c(0, 0)) +
facet_grid(.~ Period, scales="free_x", space="free") +
coord_equal() +
theme(legend.text=element_text(size=10), #panel.background=element_rect(fill="white",colour="black"),
axis.text=element_text(colour="black",size=9), strip.text=element_text(colour="black",size=12)) +
xlab("") +
ylab("")
tiff(paste(oDir, "/map_", type, "_monthly_", var, "_", rgname, "_lr.tif", sep=""), width=1200, height = 570, pointsize=8, compression='lzw',res=100)
print(p)
dev.off()
}
bDir="Z:/DATA/WP2/01_Weather_Stations"
# dst="COL"
# rg=c(-79.5, -72, -11.9, 3)
rg <- c(-80, -66, -16, 5)
rgname <- "amazon"
sY=1971
fY=2010
oDir="Z:/DATA/WP2/04_Evaluations/01_weather_stations_comparissons"
varList <- c("prec", "tmax", "tmin")
mskDir ="Z:/DATA/WP2/00_zones"
for (var in varList){
map_na(bDir, dst, var, rg, sY, fY, rgname, oDir, mskDir, "nas")
map_na(bDir, dst, var, rg, sY, fY, rgname, oDir, mskDir, "cover")
}
bDir="Z:/DATA/WP2/01_Weather_Stations"
# dst="COL"
# rg=c(-79.5, -72, -11.9, 3)
rg <- c(-80, -66, -16, 5)
rgname <- "amazon"
sY=1971
fY=2010
oDir="Z:/DATA/WP2/04_Evaluations/01_weather_stations_comparissons"
varList <- c("prec", "tmax", "tmin")
mskDir ="Z:/DATA/WP2/00_zones"
var <- varList[1]
library(reshape)
library(ggplot2)
require(raster)
require(rgeos)
require(rgdal)
# Set region extent
rgExt <- extent(rg)
# mskNap <- readOGR(paste0(mskDir, "/tnc_terrestial_ecoregions_napo.shp"), layer= "tnc_terrestial_ecoregions_napo")
mskAmz <- readOGR(paste0(mskDir, "/rg_poly_amazon_border.shp"), layer= "rg_poly_amazon_border")
mskCnt <- readOGR(paste0(mskDir, "/rg_poly_countries.shp"), layer= "rg_poly_countries")
mskAmz@data$id <- rownames(mskAmz@data); amz_region <- fortify(mskAmz)
mskCnt@data$id <- rownames(mskCnt@data); cnt_region <- fortify(mskCnt)
z1 <- readOGR("Z:/GEODATA/PE/SHAPEFILES/Area_Estudio/Reprojected/per_prj.shp", layer= "per_prj")
# Map NAs
bDir="Z:/DATA/WP2/01_Weather_Stations"
# dst="COL"
# rg=c(-79.5, -72, -11.9, 3)
rg <- c(-80, -66, -16, 5)
rgname <- "amazon"
sY=1971
fY=2010
oDir="Z:/DATA/WP2/04_Evaluations/01_weather_stations_comparissons"
varList <- c("prec", "tmax", "tmin")
mskDir ="Z:/DATA/WP2/00_zones"
for (var in varList){
map_na(bDir, dst, var, rg, sY, fY, rgname, oDir, mskDir, "nas")
map_na(bDir, dst, var, rg, sY, fY, rgname, oDir, mskDir, "cover")
}
# Map NAs
bDir="Z:/DATA/WP2/01_Weather_Stations"
# dst="COL"
rg=c(-79.5, -72, -11.9, 3)
# rg <- c(-80, -66, -16, 5)
rgname <- "amazon"
sY=1971
fY=2010
oDir="Z:/DATA/WP2/04_Evaluations/01_weather_stations_comparissons"
varList <- c("prec", "tmax", "tmin")
mskDir ="Z:/DATA/WP2/00_zones"
for (var in varList){
map_na(bDir, dst, var, rg, sY, fY, rgname, oDir, mskDir, "nas")
map_na(bDir, dst, var, rg, sY, fY, rgname, oDir, mskDir, "cover")
}
# Map NAs
bDir="Z:/DATA/WP2/01_Weather_Stations"
# dst="COL"
# rg=c(-79.5, -72, -11.9, 3)
rg <- c(-80, -66, -16, 5)
rgname <- "amazon"
sY=1971
fY=2010
oDir="Z:/DATA/WP2/04_Evaluations/01_weather_stations_comparissons"
varList <- c("prec", "tmax", "tmin")
mskDir ="Z:/DATA/WP2/00_zones"
for (var in varList){
map_na(bDir, dst, var, rg, sY, fY, rgname, oDir, mskDir, "nas")
map_na(bDir, dst, var, rg, sY, fY, rgname, oDir, mskDir, "cover")
}
